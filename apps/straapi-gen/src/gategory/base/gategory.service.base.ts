/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Gategory } from "@prisma/client";

export class GategoryServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.GategoryCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.GategoryCountArgs>
  ): Promise<number> {
    return this.prisma.gategory.count(args);
  }

  async gategories<T extends Prisma.GategoryFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.GategoryFindManyArgs>
  ): Promise<Gategory[]> {
    return this.prisma.gategory.findMany(args);
  }
  async gategory<T extends Prisma.GategoryFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.GategoryFindUniqueArgs>
  ): Promise<Gategory | null> {
    return this.prisma.gategory.findUnique(args);
  }
  async createGategory<T extends Prisma.GategoryCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.GategoryCreateArgs>
  ): Promise<Gategory> {
    return this.prisma.gategory.create<T>(args);
  }
  async updateGategory<T extends Prisma.GategoryUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.GategoryUpdateArgs>
  ): Promise<Gategory> {
    return this.prisma.gategory.update<T>(args);
  }
  async deleteGategory<T extends Prisma.GategoryDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.GategoryDeleteArgs>
  ): Promise<Gategory> {
    return this.prisma.gategory.delete(args);
  }
}
